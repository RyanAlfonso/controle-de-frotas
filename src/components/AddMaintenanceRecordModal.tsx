import React, { useState, useEffect } from 'react';
import { MaintenanceHistoryItem } from '../types';

// Define the type for the data to be saved, excluding 'id' as it's typically generated by the backend/parent
type MaintenanceRecordFormData = Omit<MaintenanceHistoryItem, 'id'>;

interface AddMaintenanceRecordModalProps {
  isOpen: boolean;
  onClose: () => void;
  onSave: (record: MaintenanceRecordFormData) => void;
}

const initialRecordData: MaintenanceRecordFormData = {
  date: '',
  type: '',
  description: '',
  cost: 0,
  supplier: '',
  os: '', // Changed from serviceOrderNumber
};

const AddMaintenanceRecordModal: React.FC<AddMaintenanceRecordModalProps> = ({
  isOpen,
  onClose,
  onSave,
}) => {
  const [recordData, setRecordData] = useState<MaintenanceRecordFormData>(initialRecordData);

  useEffect(() => {
    // Reset form when modal is opened (if it was previously closed with data)
    if (isOpen) {
      setRecordData(initialRecordData);
    }
  }, [isOpen]);

  const handleChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>
  ) => {
    const { id, value, type } = e.target;
    setRecordData((prev) => ({
      ...prev,
      [id]: type === 'number' ? parseFloat(value) || 0 : value,
    }));
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSave(recordData);
    onClose(); // Close modal after saving
  };

  if (!isOpen) {
    return null;
  }

  return (
    <div className="modal-backdrop fixed inset-0 bg-black/30 flex items-center justify-center p-4 z-50">
      <div className="modal-content bg-white border border-slate-200 w-full max-w-lg rounded-xl shadow-2xl">
        <form onSubmit={handleSubmit} className="p-6">
          <h3 className="text-lg font-semibold text-slate-800 mb-5">Adicionar Registro de Manutenção</h3>
          <div className="space-y-4 max-h-[70vh] overflow-y-auto pr-3">

            <div>
              <label htmlFor="date" className="block text-xs font-medium text-slate-500">Data</label>
              <input
                type="date"
                id="date"
                value={recordData.date}
                onChange={handleChange}
                required
                className="form-input mt-1 px-3 py-2 border border-slate-300 bg-white text-slate-800 rounded-lg text-sm focus:bg-white focus:ring-2 focus:ring-teal-500 focus:border-teal-500 transition w-full"
              />
            </div>

            <div>
              <label htmlFor="type" className="block text-xs font-medium text-slate-500">Tipo de Manutenção</label>
              <input
                type="text"
                id="type"
                value={recordData.type}
                onChange={handleChange}
                required
                placeholder="Ex: Troca de óleo, Reparo de freio"
                className="form-input mt-1 px-3 py-2 border border-slate-300 bg-white text-slate-800 rounded-lg text-sm focus:bg-white focus:ring-2 focus:ring-teal-500 focus:border-teal-500 transition w-full"
              />
            </div>

            <div>
              <label htmlFor="description" className="block text-xs font-medium text-slate-500">Descrição Detalhada</label>
              <textarea
                id="description"
                value={recordData.description}
                onChange={handleChange}
                required
                rows={3}
                placeholder="Descreva os serviços realizados, peças trocadas, etc."
                className="form-input mt-1 px-3 py-2 border border-slate-300 bg-white text-slate-800 rounded-lg text-sm focus:bg-white focus:ring-2 focus:ring-teal-500 focus:border-teal-500 transition w-full"
              />
            </div>

            <div>
              <label htmlFor="cost" className="block text-xs font-medium text-slate-500">Custo (R$)</label>
              <input
                type="number"
                id="cost"
                value={recordData.cost}
                onChange={handleChange}
                required
                step="0.01"
                min="0"
                className="form-input mt-1 px-3 py-2 border border-slate-300 bg-white text-slate-800 rounded-lg text-sm focus:bg-white focus:ring-2 focus:ring-teal-500 focus:border-teal-500 transition w-full"
              />
            </div>

            <div>
              <label htmlFor="supplier" className="block text-xs font-medium text-slate-500">Fornecedor / Oficina</label>
              <input
                type="text"
                id="supplier"
                value={recordData.supplier}
                onChange={handleChange}
                placeholder="Ex: Oficina do Zé, Concessionária XYZ"
                className="form-input mt-1 px-3 py-2 border border-slate-300 bg-white text-slate-800 rounded-lg text-sm focus:bg-white focus:ring-2 focus:ring-teal-500 focus:border-teal-500 transition w-full"
              />
            </div>

            <div>
              <label htmlFor="os" className="block text-xs font-medium text-slate-500">Número da OS / Nota Fiscal</label>
              <input
                type="text"
                id="os" // Changed from serviceOrderNumber
                value={recordData.os} // Changed from recordData.serviceOrderNumber
                onChange={handleChange}
                placeholder="Ex: OS-12345, NF-9876"
                className="form-input mt-1 px-3 py-2 border border-slate-300 bg-white text-slate-800 rounded-lg text-sm focus:bg-white focus:ring-2 focus:ring-teal-500 focus:border-teal-500 transition w-full"
              />
            </div>

          </div>
          <div className="flex justify-end gap-3 mt-6 pt-4 border-t border-slate-200">
            <button
              type="button"
              onClick={onClose}
              className="modal-cancel-button px-5 py-2 text-sm font-semibold rounded-lg transition-colors bg-slate-100 text-slate-700 hover:bg-slate-200"
            >
              Cancelar
            </button>
            <button
              type="submit"
              className="px-5 py-2 text-sm font-semibold rounded-lg transition-colors bg-teal-600 text-white hover:bg-teal-700 shadow-lg shadow-teal-600/10"
            >
              Salvar Registro
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default AddMaintenanceRecordModal;
